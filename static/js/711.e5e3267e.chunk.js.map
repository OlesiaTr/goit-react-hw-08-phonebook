{"version":3,"file":"static/js/711.e5e3267e.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/selectors.js","components/Contact/Contact.styled.js","components/Button/Button.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx","redux/contacts/selectors.js"],"sourcesContent":["export const selectFilter = state => state.filter;\n","// Core\nimport { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from './contacts/selectors';\nimport { selectFilter } from './filter/selectors';\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// Utils\nimport styled from 'styled-components';\nimport { HiOutlineTrash } from 'react-icons/hi';\nimport { BsTelephoneFill } from 'react-icons/bs';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Name = styled.p`\n  font-weight: 700;\n  font-size: 24px;\n\n  margin-bottom: 5px;\n`;\n\nexport const Number = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  color: rgb(136 136 136);\n`;\n\nexport const Icon = styled(HiOutlineTrash)`\n  display: inline-flex;\n  width: 16px;\n  height: 16px;\n`;\n\nexport const Phone = styled(BsTelephoneFill)`\n  display: inline-flex;\n  width: 10px;\n  height: 10px;\n\n  margin-right: 5px;\n`;\n","// Utils\nimport styled from 'styled-components';\n\nexport const Btn = styled.button`\n  display: flex;\n  align-items: center;\n\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 10px;\n\n  color: #2b3a55;\n\n  padding: 8px 8px;\n\n  border-radius: 4px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\n    rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\n\n  :hover,\n  :focus {\n    color: #fb6d3a;\n    border-color: #fb6d3a;\n  }\n`;\n","// Core\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\n// Utils\nimport { PropTypes } from 'prop-types';\n\n// Styles\nimport { Wrapper, Name, Number, Icon, Phone } from './Contact.styled';\nimport { Btn } from 'components/Button/Button.styled';\n\nexport const Contact = ({ item: { name, id, number } }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <Wrapper>\n        <Name>{name}</Name>\n        <Number>\n          <Phone />\n          {number}\n        </Number>\n      </Wrapper>\n      <Btn onClick={onDeleteContact}>\n        <Icon />\n      </Btn>\n    </>\n  );\n};\n\nContact.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 8px;\n  width: 100%;\n\n  background-color: rgb(240 240 240);\n\n  border-radius: 4px;\n  border: 1px solid rgb(178, 178, 178);\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\n    rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\n\n  & + & {\n    margin-top: 2px;\n  }\n`;\n","// Core\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\n\n// Components\nimport { Contact } from 'components/Contact';\n\n// Styles\nimport { List, Item } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filterList = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {filterList.map(item => (\n        <Item key={item.id}>\n          <Contact item={item} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n","// Utils\nimport { PropTypes } from 'prop-types';\n\n// Styles\nimport { Btn } from './Button.styled';\n\nexport const Button = ({ children }) => {\n  return <Btn>{children}</Btn>;\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","// Utils\nimport styled from 'styled-components';\nimport { FaUserCircle } from 'react-icons/fa';\nimport { AiOutlineNumber } from 'react-icons/ai';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: flex-end;\n  flex-direction: column;\n\n  margin-top: 50px;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n\n  font-weight: 700;\n  letter-spacing: 0.06em;\n\n  > svg {\n    position: absolute;\n    top: 35%;\n    transform: translate(50%, 50%);\n\n    width: 20px;\n    height: 20px;\n\n    color: #2b3a55;\n\n    cursor: pointer;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  & + & {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 5px;\n  padding-left: 40px;\n  margin-top: 5px;\n\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus-within {\n    outline: none;\n    border-color: #fb6d3a;\n  }\n`;\n\nexport const User = styled(FaUserCircle)`\n  Input:hover + &,\n  Input:focus + & {\n    color: #fb6d3a;\n  }\n`;\n\nexport const Number = styled(AiOutlineNumber)`\n  Input:hover + &,\n  Input:focus + & {\n    color: #fb6d3a;\n  }\n`;\n","// Core\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\n\n// Components\nimport { Button } from './../Button';\n\n// Styles\nimport { Form, Label, Input, User, Number } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (submitted && !isLoading) {\n      setSubmitted(false);\n    }\n  }, [isLoading, submitted]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const withinContacts = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (withinContacts) return alert(`${name} is already in contacts`);\n\n    dispatch(addContact({ name, number }));\n    setSubmitted(true);\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error('Smth went wrong');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name{' '}\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n        <User />\n      </Label>\n\n      <Label>\n        Number{' '}\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n        <Number />\n      </Label>\n\n      <Button type=\"submit\" disabled={submitted}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","// Utils\nimport styled from 'styled-components';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const Label = styled.label`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  margin-top: 10px;\n\n  font-weight: 700;\n  letter-spacing: 0.06em;\n\n  > svg {\n    position: absolute;\n    transform: translate(50%, 50%);\n\n    width: 20px;\n    height: 20px;\n\n    color: #2b3a55;\n\n    cursor: pointer;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 5px;\n  padding-left: 40px;\n  margin-top: 5px;\n\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus-within {\n    outline: none;\n    border-color: #fb6d3a;\n  }\n`;\n\nexport const Search = styled(AiOutlineSearch)`\n  Input:hover + &,\n  Input:focus + & {\n    color: #fb6d3a;\n  }\n`;\n","// Core\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/slice';\n\n// Styles\nimport { Label, Input, Search } from './Filter.styled';\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const normalized = e.target.value.toLowerCase();\n    dispatch(setFilter(normalized));\n  };\n\n  return (\n    <Label>\n      <Input\n        onChange={onChange}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        placeholder=\"Search for contact ...\"\n      />\n      <Search />\n    </Label>\n  );\n};\n","// Core\n\nimport styled from 'styled-components';\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  width: 480px;\n`;\n","// Core\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\n// Components\nimport { ContactList } from 'components/ContactList';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\n\n// Styles\nimport { Main } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Main>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      {contacts.length > 0 && <Filter />}\n      <div>{isLoading && 'Request in progress...'}</div>\n      {contacts.length > 0 && <ContactList />}\n    </Main>\n  );\n}\n","export const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\n"],"names":["selectFilter","state","filter","selectFilteredContacts","createSelector","selectContacts","contacts","contact","name","toLowerCase","includes","Wrapper","styled","Name","Number","Icon","HiOutlineTrash","Phone","BsTelephoneFill","Btn","Contact","item","id","number","dispatch","useDispatch","onClick","deleteContact","List","Item","ContactList","filterList","useSelector","map","Button","children","Form","Label","Input","User","FaUserCircle","AiOutlineNumber","ContactForm","useState","setName","setNumber","submitted","setSubmitted","isLoading","selectIsLoading","useEffect","handleChange","e","currentTarget","value","Error","onSubmit","preventDefault","some","alert","addContact","type","pattern","title","required","onChange","disabled","Search","AiOutlineSearch","Filter","normalized","target","setFilter","placeholder","Main","Contacts","fetchContacts","Helmet","length","items"],"sourceRoot":""}